---
import { getCollection, render } from "astro:content";
import { mdxComponents } from "../../components/documentation/mdx-components";
import DocumentationLayout from "../../layouts/DocumentationLayout.astro";
import { Versions } from "../../lib/constants";
import { VersionedSection } from "../../components/documentation/DocsSidebar/SideNavVersions";
import { SIDENAV_SECTIONS as SIDENAV_SECTIONS_EDGE } from "./edge/_sideNavSections";
import { SIDENAV_SECTIONS as SIDENAV_SECTIONS_MAIN } from "./main/_sideNavSections";
import { SIDENAV_SECTIONS as SIDENAV_SECTIONS_24_05 } from "./24-05/_sideNavSections";

// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const docs = await getCollection("docs");
  return docs.map((doc) => {
    return {
      params: { path: doc.id },
      props: { entry: doc },
    };
  });
}

const { entry } = Astro.props;
const { Content, headings } = await render(entry);

export const VERSIONED_SECTIONS: VersionedSection = {
  [Versions.edge]: SIDENAV_SECTIONS_EDGE,
  [Versions.unreleased]: SIDENAV_SECTIONS_MAIN,
  [Versions.stable_24_05]: SIDENAV_SECTIONS_24_05,
};
---

<DocumentationLayout
  title={entry.data.title}
  description={entry.data.description}
  headings={headings}
  versionedSections={VERSIONED_SECTIONS}
  showFooter={true}
>
  <Content components={mdxComponents} />
</DocumentationLayout>

<script>
  document.addEventListener("click", function (event) {
    // Check if the clicked element is an anchor inside a heading
    if (
      event.target.closest("a") &&
      event.target.closest("h1, h2, h3, h4, h5, h6")
    ) {
      const anchor = event.target.closest("a");
      const href = anchor.getAttribute("href");

      if (href && href.startsWith("#")) {
        // Combine the current page URL with the href
        const fullUrl = `${window.location.origin}${window.location.pathname}${href}`;

        // Copy the full URL to the clipboard
        navigator.clipboard
          .writeText(fullUrl)
          .then(() => {
            console.log(`Copied to clipboard: ${fullUrl}`);
          })
          .catch((err) => {
            console.error("Failed to copy text: ", err);
          });

        // Prevent the default action of scrolling to the anchor
        event.preventDefault();
      }
    }
  });
</script>
