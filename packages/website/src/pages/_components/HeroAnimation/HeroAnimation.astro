---
import { Image } from "astro:assets";

import RootOrbit from "./RootOrbit.astro";
import ArgoSquare from "./images/argo-square.jpg"
import AuthentikSquare from "./images/authentik-square.jpg"
import CanarySquare from "./images/canary-checker-square.jpg"
import CertManagerSquare from "./images/cert-manager-square.jpg"
import CiliumSquare from "./images/cilium-square.jpg"
import CoreDNSSquare from "./images/core-dns-square.jpg"
import GrafanaSquare from "./images/grafana-square.jpg"
import KarpenterSquare from "./images/karpenter-square.jpg"
import KedaSquare from "./images/keda-square.jpg"
import KubernetesSquare from "./images/kubernetes-square.jpg";
import KyvernoSquare from "./images/kyverno-square.jpg"
import LinkerdSquare from "./images/linkerd-square.jpg"
import NATSSquare from "./images/nats-square.jpg"
import NixIcon from "./images/nix.jpg";
import PanfactumSquare from "./images/panfactum-square.jpg";
import PostgreSQLSqaure from "./images/postgres-square.jpg"
import PrometheusSquare from "./images/prometheus-square.jpg"
import RedisSquare from "./images/redis-square.jpg"
import TerragruntIcon from "./images/terragrunt.jpg";
import TiltIcon from "./images/tilt.jpg";
import TofuIcon from "./images/tofu.jpg";
import VaultSquare from "./images/vault-square.jpg"
import VeleroSquare from "./images/velero-square.jpg"

interface Props {
  scale?: number;
}

const { scale = 1 } = Astro.props;
---

<div
  class:list={`relative`}
  style={{
    "min-width": `calc((512px + 64px) * ${scale})`,
    "min-height": `calc(532px * ${scale})`,
  }}
>
  <script>

    const stagingArea = document.getElementById("animation-image-staging")!

    // Utility fx for swapping logos on the image elements
    const swapLogo = (imgElement: HTMLImageElement) => {
      const options = stagingArea.children
      const newLogo = options[Math.floor(Math.random()*options.length)] as HTMLImageElement;
      const currentSrc = imgElement.src;
      const currentSrcSet = imgElement.srcset;
      const currentAlt = imgElement.alt;
      imgElement.src = newLogo.src;
      imgElement.srcset = newLogo.srcset;
      imgElement.alt = newLogo.alt
      newLogo.src = currentSrc
      newLogo.srcset = currentSrcSet;
      newLogo.alt = currentAlt;
    };

    document.addEventListener("astro:page-load", () => {
      setTimeout(() => {
        // Get all image elements that hold the logos
        const imgElements: HTMLImageElement[] = Array.from(
          document.querySelectorAll(".hero-icon"),
        );

        // Swap the logo after each animation loop
        imgElements.forEach((imgElement) => {
          imgElement.addEventListener("animationiteration", () => {
            swapLogo(imgElement);
          });
        });
      }, 250);
    });
  </script>
  <style define:vars={{ scale }}>
    .circling-planets {
      animation: rotatingPlanets 20s linear infinite;
    }
    @keyframes rotatingPlanets {
      0% {
        transform: rotate(0deg);
      }

      100% {
        transform: rotate(360deg);
      }
    }

    #hero-icon-1 {
      animation: iconUpDown 3s infinite 0.75s ease-out;
    }

    #hero-icon-2 {
      animation: iconUpDown 3s infinite 1.25s ease-out;
    }

    #hero-icon-3 {
      animation: iconUpDown 3s infinite ease-out;
    }

    #hero-icon-4 {
      animation: iconUpDown 3s infinite 0.5s ease-out;
    }

    @keyframes iconUpDown {
      0% {
        transform: translateY(0);
      }
      8% {
          transform: translateY(0);
      }
      25% {
        transform: translateY(calc(145px * var(--scale)));
      }
      75% {
        transform: translateY(calc(145px * var(--scale)));
      }
      92% {
        transform: translateY(0);
      }
      100% {
          transform: translateY(0);
      }
    }

    .circling-icons {
      animation: circlingIcons 40s infinite linear;
    }

    @keyframes circlingIcons {
      0% {
        transform: rotate(0);
      }

      100% {
        transform: rotate(-360deg);
      }
    }

    .circling-icon {
      animation: circlingIcon 40s infinite linear;
    }

    @keyframes circlingIcon {
      0% {
        transform: rotate(0);
      }

      100% {
        transform: rotate(360deg);
      }
    }
  </style>

  <div id="animation-image-staging" class="hidden">
    {[
      {
        src: CanarySquare,
        alt: "Canary Checker logo",
      },
      { src: CertManagerSquare, alt: "cert-manager logo" },
      { src: CoreDNSSquare, alt: "CoreDNS logo" },
      { src: GrafanaSquare, alt: "Grafana logo" },
      { src: KarpenterSquare, alt: "Karpenter logo" },
      { src: KedaSquare, alt: "KEDA logo" },
      { src: KyvernoSquare, alt: "Kyverno logo" },
      { src: LinkerdSquare, alt: "Linkerd logo" },
      { src: NATSSquare, alt: "NATS logo" },
      { src: PostgreSQLSqaure, alt: "PostgreSQL logo" },
      { src: PrometheusSquare, alt: "Prometheus logo" },
      { src: VaultSquare, alt: "Vault logo" },
      { src: VeleroSquare, alt: "Velero logo" },
    ].map(({src, alt}) => (
      <Image
        src={src}
        alt={alt}
        width={105 * scale}
        height={105 * scale}
        loading="lazy"
        fetchpriority="low"
        decoding="async"
        format="avif"
        class="hero-icon border-primary border-2 border-solid drop-shadow-2xl"
        style={{
          "border-radius": `calc(16px * ${scale})`,
        }}
      />
    ))}
  </div>

  <div
    class="absolute [transform:rotateX(45deg)]"
    style={{
      width: `calc(512px * ${scale})`,
      height: `calc(512px * ${scale})`,
      left: `calc(32px * ${scale})`,
      top: `calc(64px * ${scale})`,
    }}
  >
    <Image
      src={PanfactumSquare}
      alt="Stylized Panfactum logo"
      height={256 * scale}
      width={256 * scale}
      loading="eager"
      fetchpriority="high"
      decoding="sync"
      priority={true}
      format="avif"
      class="absolute z-30 rotate-45 drop-shadow-2xl"
      style={{
        top: `calc(-128px * ${scale})`,
        left: `calc(50% - (128px * ${scale}))`,
        "border-radius": `calc(20px * ${scale})`,
      }}
    />
    <Image
      src={KubernetesSquare}
      alt="Kubernetes logo"
      height={256 * scale}
      width={256 * scale}
      loading="eager"
      fetchpriority="high"
      decoding="sync"
      priority={true}
      format="avif"
      class="absolute z-20 rotate-45"
      style={{
        top: `calc(50% - (128px * ${scale}))`,
        left: `calc(50% - (128px * ${scale}))`,
        "border-radius": `calc(20px * ${scale})`,
      }}
    />
    <div
      class="absolute z-20 flex rotate-45"
      style={{
        left: `calc(95px * ${scale})`,
        top: `calc(-12px * ${scale})`,
        "column-gap": `calc(28px * ${scale})`,
      }}
    >
      <Image
        src={AuthentikSquare}
        alt="Authentik logo"
        width={105 * scale}
        height={105 * scale}
        id="hero-icon-1"
        loading="eager"
        fetchpriority="low"
        decoding="async"
        format="avif"
        class="hero-icon border-primary border-2 border-solid drop-shadow-2xl"
        style={{
          "border-radius": `calc(16px * ${scale})`,
        }}
      />
      <Image
        src={RedisSquare}
        alt="Redis logo"
        width={105 * scale}
        height={105 * scale}
        id="hero-icon-2"
        loading="eager"
        fetchpriority="low"
        decoding="async"
        format="avif"
        class="hero-icon border-primary border-2 border-solid drop-shadow-2xl"
        style={{
          "border-radius": `calc(16px * ${scale})`,
        }}
      />
    </div>
    <div
      class="absolute z-20 flex -rotate-45"
      style={{
        right: `calc(95px * ${scale})`,
        top: `calc(-12px * ${scale})`,
        "column-gap": `calc(28px * ${scale})`,
      }}
    >
      <Image
        src={ArgoSquare}
        alt="Argo logo"
        width={105 * scale}
        height={105 * scale}
        id="hero-icon-3"
        loading="eager"
        fetchpriority="low"
        decoding="async"
        format="avif"
        class="hero-icon border-primary border-2 border-solid drop-shadow-2xl"
        style={{
          "width": `calc(120px * ${scale})`,
          "border-radius": `calc(16px * ${scale})`,
        }}
      />
      <Image
        src={CiliumSquare}
        alt="Cilium logo"
        width={105 * scale}
        height={105 * scale}
        id="hero-icon-4"
        loading="eager"
        fetchpriority="low"
        decoding="async"
        format="avif"
        class="hero-icon border-primary border-2 border-solid drop-shadow-2xl"
        style={{
          "border-radius": `calc(16px * ${scale})`,
        }}
      />
    </div>
    <div class="circling-icons absolute z-10 size-full">
      <Image
        src={TerragruntIcon}
        alt="Terragrunt icon"
        width={64 * scale}
        height={64 * scale}
        class="circling-icon absolute rounded-[50%]"
        loading="eager"
        fetchpriority="high"
        decoding="sync"
        priority={true}
        format="avif"
        style={{
          top: `calc(-32px * ${scale})`,
          left: `calc(50% - (32px * ${scale}))`,
        }}
      />
      <Image
        src={NixIcon}
        alt="Nix icon"
        width={64 * scale}
        height={64 * scale}
        class="circling-icon absolute rounded-[50%]"
        loading="eager"
        fetchpriority="high"
        decoding="sync"
        priority={true}
        format="avif"
        style={{
          left: `calc(-32px * ${scale})`,
          top: `calc(50% - (32px * ${scale}))`,
        }}
      />
      <Image
        src={TiltIcon}
        alt="Tilt icon"
        width={64 * scale}
        height={64 * scale}
        class="circling-icon absolute rounded-[50%]"
        loading="eager"
        fetchpriority="high"
        decoding="sync"
        priority={true}
        format="avif"
        style={{
          right: `calc(-32px * ${scale})`,
          top: `calc(50% - (32px * ${scale}))`,
        }}
      />
      <Image
        src={TofuIcon}
        alt="Tofu icon"
        width={64 * scale}
        height={64 * scale}
        class="circling-icon absolute rounded-[50%]"
        loading="eager"
        fetchpriority="high"
        decoding="sync"
        priority={true}
        format="avif"
        style={{
          bottom: `calc(-32px * ${scale})`,
          left: `calc(50% - (32px * ${scale}))`,
        }}
      />
    </div>
    <div class="circling-planets">
      <RootOrbit />
    </div>
  </div>
</div>
