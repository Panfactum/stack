---
import {Head} from "astro-capo"
import { AstroFont } from "astro-font";
import { SEO } from "astro-seo";
import { NODE_ENV } from "astro:env/client"
import { ClientRouter } from "astro:transitions";

import { join } from "node:path";


interface Props {
  title: string;
  description: string;
  redirect?: string;
}

const { title, description, redirect } = Astro.props;
---

<Head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <SEO title={title} description={description} />
  {redirect && <meta http-equiv="refresh" content={`0; url=${redirect}`} />}
  <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
  <link rel="preconnect" href="https://fonts.googleapis.com" />
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
  {NODE_ENV === "production" && <script is:inline async src="https://www.googletagmanager.com/gtag/js?id=G-EX534J6X8H"></script>}
  <AstroFont
          config={[
            {
              name: "Inter",
              src: [],
              googleFontsURL: 'https://fonts.googleapis.com/css2?family=Inter:opsz,wght@14..32,400..700&display=swap',
              preload: true,
              display: "swap",
              selector: "body",
              fallback: "sans-serif",
            },
            {
              name: "neue-machina",
              src: [
                {
                  weight: '400',
                  style: 'normal',
                  path: join(process.cwd(), 'public', 'fonts', "neue-machina", 'PPNeueMachina-PlainLight.woff2'),
                  preload: false
                },
                {
                  weight: '500',
                  style: 'normal',
                  path: join(process.cwd(), 'public', 'fonts', "neue-machina", 'PPNeueMachina-PlainMedium.woff2'),
                  preload: true,
                },
                {
                  weight: '600',
                  style: 'normal',
                  path: join(process.cwd(), 'public', 'fonts', "neue-machina", 'PPNeueMachina-PlainRegular.woff2'),
                  preload: false
                },
                {
                  weight: '700',
                  style: 'normal',
                  path: join(process.cwd(), 'public', 'fonts', "neue-machina", 'PPNeueMachina-PlainUltrabold.woff2'),
                  preload: false
                }
              ],
              display: "swap",
              selector: ".font-machina",
              fallback: "sans-serif",
            },
            {
              name: "neue-montreal-mono",
              src: [
                {
                  weight: '400',
                  style: 'normal',
                  path: join(process.cwd(), 'public', 'fonts', "neue-montreal-mono",'PPNeueMontrealMono-Light.woff2')
                },
                {
                  weight: '500',
                  style: 'normal',
                  path: join(process.cwd(), 'public', 'fonts', "neue-montreal-mono", 'PPNeueMontrealMono-Regular.woff2')
                },
                {
                  weight: '600',
                  style: 'normal',
                  path: join(process.cwd(), 'public', 'fonts',"neue-montreal-mono", 'PPNeueMontrealMono-Medium.woff2')
                },
                {
                  weight: '700',
                  style: 'normal',
                  path: join(process.cwd(), 'public', 'fonts', "neue-montreal-mono", 'PPNeueMontrealMono-Bold.woff2')
                }
              ],
              preload: false,
              display: "swap",
              selector: ".font-machina",
              fallback: "sans-serif",
            },
          ]}
  />
    <slot/>
  <ClientRouter />
</Head>
{NODE_ENV === "production" && (
<script is:inline>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-EX534J6X8H');
</script>
<script is:inline>
  !function(t,e){var o,n,p,r;e.__SV||(window.posthog=e,e._i=[],e.init=function(i,s,a){function g(t,e){var o=e.split(".");2==o.length&&(t=t[o[0]],e=o[1]),t[e]=function(){t.push([e].concat(Array.prototype.slice.call(arguments,0)))}}(p=t.createElement("script")).type="text/javascript",p.crossOrigin="anonymous",p.async=!0,p.src=s.api_host.replace(".i.posthog.com","-assets.i.posthog.com")+"/static/array.js",(r=t.getElementsByTagName("script")[0]).parentNode.insertBefore(p,r);var u=e;for(void 0!==a?u=e[a]=[]:a="posthog",u.people=u.people||[],u.toString=function(t){var e="posthog";return"posthog"!==a&&(e+="."+a),t||(e+=" (stub)"),e},u.people.toString=function(){return u.toString(1)+".people (stub)"},o="init be ys Ss me gs ws capture Le calculateEventProperties xs register register_once register_for_session unregister unregister_for_session Rs getFeatureFlag getFeatureFlagPayload isFeatureEnabled reloadFeatureFlags updateEarlyAccessFeatureEnrollment getEarlyAccessFeatures on onFeatureFlags onSurveysLoaded onSessionId getSurveys getActiveMatchingSurveys renderSurvey canRenderSurvey canRenderSurveyAsync identify setPersonProperties group resetGroups setPersonPropertiesForFlags resetPersonPropertiesForFlags setGroupPropertiesForFlags resetGroupPropertiesForFlags reset get_distinct_id getGroups get_session_id get_session_replay_url alias set_config startSessionRecording stopSessionRecording sessionRecordingStarted captureException loadToolbar get_property getSessionProperty Is ks createPersonProfile Ps bs opt_in_capturing opt_out_capturing has_opted_in_capturing has_opted_out_capturing clear_opt_in_out_capturing $s debug Es getPageViewId captureTraceFeedback captureTraceMetric".split(" "),n=0;n<o.length;n++)g(u,o[n]);e._i.push([i,s,a])},e.__SV=1)}(document,window.posthog||[]);
  posthog.init('phc_OAyUkW0PitOtfs2CpzRnSS3fL5HkKwSzO4MrcIibhtA', {
      api_host: 'https://us.i.posthog.com',
      person_profiles: 'identified_only', // or 'always' to create profiles for anonymous users as well
  })
</script>
)}

